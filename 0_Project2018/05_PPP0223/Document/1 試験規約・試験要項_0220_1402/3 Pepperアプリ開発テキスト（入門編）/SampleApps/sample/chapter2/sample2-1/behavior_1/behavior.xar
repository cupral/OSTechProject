<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Init" id="2" localization="8" tooltip="" x="118" y="37"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Stop Script(2.5~)" id="2" localization="8" tooltip="Autonomous Abilities exists to keep the robot alive at all times. But this box allows you to disable all or parts of the Autonomous Abilities (Autonomous Blinking, Background Movement, Basic Awareness, Listening Movement, Speaking Movement)." x="178" y="53"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.autonomouslife = ALProxy("ALAutonomousLife")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.enableAnAbility("AutonomousBlinking")
        self.enableAnAbility("BackgroundMovement")
        self.enableAnAbility("BasicAwareness")
        self.enableAnAbility("ListeningMovement")
        self.enableAnAbility("SpeakingMovement")
        self.onDone() # activate output of the box

    def enableAnAbility(self, name):
        self.autonomouslife.setAutonomousAbilityEnabled(name, self.getParameter(name))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Parameter name="AutonomousBlinking" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables the robot to make its eye leds blink when it sees someone and when it is interacting." id="4" /><Parameter name="BackgroundMovement" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Defines which slight movements the robot does autonomously when its limbs are not moving." id="5" /><Parameter name="BasicAwareness" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Allow to make the robot establish and keep eye contact with people." id="6" /><Parameter name="ListeningMovement" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables some slight movements showing that the robot is listening." id="7" /><Parameter name="SpeakingMovement" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables to start autonomously movements during the speech of the robot." id="8" /></Box><Box name="Show App" id="3" localization="8" tooltip="Loads the application on the tablet, if it exists, and displays the webview.&#x0A;&#x0A;V1.0.0&#x0A;" x="181" y="181"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.isRunning = False
        self.frameManager = None
        try:
            self.frameManager = ALProxy("ALFrameManager")
        except Exception as e:
            self.logger.error(e)

    def onUnload(self):
        self.isRunning = False

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        appName = self.packageUid()
        state = False
        if appName:
            if tabletService:
                if tabletService.loadApplication(appName):
                    self.logger.info("Successfully set application: %s" % appName)
                    tabletService.showWebview()
                    state = True
                else:
                    self.logger.warning("Got tablet service, but failed to set application: %s" % appName)
            else:
                self.logger.warning("Couldn't find tablet service, so can't set application: %s" % appName)
        if state:
            self.onSuccess()
        else:
            self.onFailure()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onSuccess" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished successfully." id="3" /><Output name="onFailure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished unsuccessfully." id="4" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="3" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Main" id="1" localization="8" tooltip="" x="262" y="39"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="I am Pepper" id="8" localization="8" tooltip="みなさんこんにちは！！ペッパーです！" x="95" y="43"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="155" size="155"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe75" index="75"><Diagram><Box name="I am Pepper" id="2" localization="8" tooltip="みなさん　こんにちは！！　ペッパーです！" x="98" y="19"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="135" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="\rspd=110\\vct=125\みなさん\rspd=110\\vct=135\こんにちは！！\rspd=120\\vct=135\ペッパーです！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="25" value="-10.8106" /><Key frame="35" value="-10.8106" /><Key frame="65" value="-10.8106" /><Key frame="75" value="-10.8106" /><Key frame="80" value="-10.8106" /><Key frame="85" value="-10.8106" /><Key frame="90" value="-10.8106" /><Key frame="95" value="-10.8106" /><Key frame="105" value="-10.8106" /><Key frame="115" value="-10.5469" /><Key frame="118" value="-10.5469" /><Key frame="130" value="-10.5469" /><Key frame="155" value="-11.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="25" value="-0.263673" /><Key frame="35" value="-0.263673" /><Key frame="65" value="-0.263673" /><Key frame="75" value="-0.263673" /><Key frame="80" value="-0.263673" /><Key frame="85" value="-0.263673" /><Key frame="90" value="-0.263673" /><Key frame="95" value="-0.263673" /><Key frame="105" value="-0.263673" /><Key frame="115" value="-0.263673" /><Key frame="118" value="-0.263673" /><Key frame="130" value="-0.263673" /><Key frame="155" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="25" value="-1.31836" /><Key frame="35" value="-1.31836" /><Key frame="65" value="-1.31836" /><Key frame="75" value="-1.31836" /><Key frame="80" value="-1.31836" /><Key frame="85" value="-1.31836" /><Key frame="90" value="-1.31836" /><Key frame="95" value="-1.31836" /><Key frame="105" value="-1.31836" /><Key frame="115" value="-0.703127" /><Key frame="118" value="-0.703127" /><Key frame="130" value="-0.703127" /><Key frame="155" value="-0.703127" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="25" value="-0.878909" /><Key frame="35" value="-0.878909" /><Key frame="65" value="-1.05469" /><Key frame="75" value="-1.05469" /><Key frame="80" value="-1.05469" /><Key frame="85" value="-1.05469" /><Key frame="90" value="-1.05469" /><Key frame="95" value="-1.05469" /><Key frame="105" value="-1.05469" /><Key frame="115" value="-1.05469" /><Key frame="118" value="-1.05469" /><Key frame="130" value="-1.05469" /><Key frame="155" value="-0.9668" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="25" value="-0.0878909" /><Key frame="35" value="-0.0878909" /><Key frame="65" value="0.527345" /><Key frame="75" value="0.527345" /><Key frame="80" value="1.14258" /><Key frame="85" value="0.527345" /><Key frame="90" value="1.14258" /><Key frame="95" value="0.527345" /><Key frame="105" value="0.527345" /><Key frame="115" value="1.49414" /><Key frame="118" value="2.10938" /><Key frame="130" value="2.10938" /><Key frame="155" value="0.263673" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="25" value="-84.375" /><Key frame="35" value="-84.375" /><Key frame="65" value="-54.4043" /><Key frame="75" value="-54.4043" /><Key frame="80" value="-73.6524" /><Key frame="85" value="-54.4043" /><Key frame="90" value="-73.6524" /><Key frame="95" value="-54.4043" /><Key frame="105" value="-54.4043" /><Key frame="115" value="-56.8652" /><Key frame="118" value="-56.5137" /><Key frame="130" value="-56.5137" /><Key frame="155" value="-84.4629" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="25" value="-6.5918" /><Key frame="35" value="-6.5918" /><Key frame="65" value="-46.9336" /><Key frame="75" value="-46.9336" /><Key frame="80" value="-46.7578" /><Key frame="85" value="-46.9336" /><Key frame="90" value="-46.7578" /><Key frame="95" value="-46.9336" /><Key frame="105" value="-46.9336" /><Key frame="115" value="-47.0215" /><Key frame="118" value="-47.2852" /><Key frame="130" value="-47.2852" /><Key frame="155" value="-5.97657" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="25" value="0.0588752" /><Key frame="35" value="0.0588752" /><Key frame="65" value="0.775044" /><Key frame="75" value="0.775044" /><Key frame="80" value="0.753954" /><Key frame="85" value="0.775044" /><Key frame="90" value="0.753954" /><Key frame="95" value="0.775044" /><Key frame="105" value="0.775044" /><Key frame="115" value="0.154657" /><Key frame="118" value="0.946397" /><Key frame="130" value="0.946397" /><Key frame="155" value="0.0544815" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="25" value="80.9473" /><Key frame="35" value="80.9473" /><Key frame="65" value="-47.4609" /><Key frame="75" value="-47.4609" /><Key frame="80" value="-47.1973" /><Key frame="85" value="-47.4609" /><Key frame="90" value="-47.1973" /><Key frame="95" value="-47.4609" /><Key frame="105" value="-47.4609" /><Key frame="115" value="-47.0215" /><Key frame="118" value="-47.2852" /><Key frame="130" value="-47.2852" /><Key frame="155" value="81.4746" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="25" value="51.6797" /><Key frame="35" value="51.6797" /><Key frame="65" value="55.459" /><Key frame="75" value="55.459" /><Key frame="80" value="55.459" /><Key frame="85" value="55.459" /><Key frame="90" value="55.459" /><Key frame="95" value="55.459" /><Key frame="105" value="55.459" /><Key frame="115" value="55.9863" /><Key frame="118" value="55.8106" /><Key frame="130" value="55.8106" /><Key frame="155" value="51.8555" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="25" value="-86.2242" /><Key frame="35" value="-86.2242" /><Key frame="65" value="-0.876518" /><Key frame="75" value="-0.876518" /><Key frame="80" value="-1.76024" /><Key frame="85" value="-0.876518" /><Key frame="90" value="-1.76024" /><Key frame="95" value="-0.876518" /><Key frame="105" value="-0.876518" /><Key frame="115" value="-54.1389" /><Key frame="118" value="-51.5948" /><Key frame="130" value="-51.5948" /><Key frame="155" value="-85.8726" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="25" value="83.6719" /><Key frame="35" value="83.6719" /><Key frame="65" value="54.4043" /><Key frame="75" value="54.4043" /><Key frame="80" value="73.916" /><Key frame="85" value="54.4043" /><Key frame="90" value="73.916" /><Key frame="95" value="54.4043" /><Key frame="105" value="54.4043" /><Key frame="115" value="56.8652" /><Key frame="118" value="56.4258" /><Key frame="130" value="56.4258" /><Key frame="155" value="83.6719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="25" value="6.76758" /><Key frame="35" value="6.76758" /><Key frame="65" value="46.9336" /><Key frame="75" value="46.9336" /><Key frame="80" value="46.9336" /><Key frame="85" value="46.9336" /><Key frame="90" value="46.9336" /><Key frame="95" value="46.9336" /><Key frame="105" value="46.9336" /><Key frame="115" value="47.0215" /><Key frame="118" value="47.0215" /><Key frame="130" value="47.0215" /><Key frame="155" value="6.76758" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="25" value="0.0527241" /><Key frame="35" value="0.0527241" /><Key frame="65" value="0.775044" /><Key frame="75" value="0.775044" /><Key frame="80" value="0.758348" /><Key frame="85" value="0.775044" /><Key frame="90" value="0.758348" /><Key frame="95" value="0.775044" /><Key frame="105" value="0.775044" /><Key frame="115" value="0.154657" /><Key frame="118" value="0.952548" /><Key frame="130" value="0.952548" /><Key frame="155" value="0.0492091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="25" value="80.9473" /><Key frame="35" value="80.9473" /><Key frame="65" value="-47.4609" /><Key frame="75" value="-47.4609" /><Key frame="80" value="-47.1973" /><Key frame="85" value="-47.4609" /><Key frame="90" value="-47.1973" /><Key frame="95" value="-47.4609" /><Key frame="105" value="-47.4609" /><Key frame="115" value="-47.0215" /><Key frame="118" value="-47.0215" /><Key frame="130" value="-47.0215" /><Key frame="155" value="80.9473" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="25" value="-51.5039" /><Key frame="35" value="-51.5039" /><Key frame="65" value="-55.459" /><Key frame="75" value="-55.459" /><Key frame="80" value="-55.1953" /><Key frame="85" value="-55.459" /><Key frame="90" value="-55.1953" /><Key frame="95" value="-55.459" /><Key frame="105" value="-55.459" /><Key frame="115" value="-55.9863" /><Key frame="118" value="-55.9863" /><Key frame="130" value="-55.9863" /><Key frame="155" value="-51.5918" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="25" value="86.4831" /><Key frame="35" value="86.4831" /><Key frame="65" value="0.876518" /><Key frame="75" value="0.876518" /><Key frame="80" value="0.173378" /><Key frame="85" value="0.876518" /><Key frame="90" value="0.173378" /><Key frame="95" value="0.876518" /><Key frame="105" value="0.876518" /><Key frame="115" value="54.1389" /><Key frame="118" value="52.469" /><Key frame="130" value="52.469" /><Key frame="155" value="86.2194" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="MyApp Create" id="3" localization="8" tooltip="これから、僕のアプリを、作ってくれるんでしょ？" x="230" y="44"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="165" size="165"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe50" index="50"><Diagram><Box name="MyApp Create" id="2" localization="8" tooltip="これから、僕のアプリを、作ってくれるんでしょ？" x="83" y="28"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="135" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="これから、僕のアプリを、作ってくれるんでしょ？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="25" value="-11.25" /><Key frame="50" value="-11.25" /><Key frame="55" value="-11.25" /><Key frame="75" value="-11.25" /><Key frame="79" value="-11.25" /><Key frame="83" value="-11.25" /><Key frame="87" value="-11.25" /><Key frame="110" value="-11.25" /><Key frame="125" value="-11.9531" /><Key frame="140" value="-11.9531" /><Key frame="165" value="-11.4258" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="25" value="0" /><Key frame="50" value="0" /><Key frame="55" value="0" /><Key frame="75" value="0" /><Key frame="79" value="0" /><Key frame="83" value="0" /><Key frame="87" value="0" /><Key frame="110" value="0" /><Key frame="125" value="0" /><Key frame="140" value="0" /><Key frame="165" value="0.351564" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="25" value="-0.703127" /><Key frame="50" value="-0.703127" /><Key frame="55" value="-0.703127" /><Key frame="75" value="-1.31836" /><Key frame="79" value="-1.31836" /><Key frame="83" value="-1.31836" /><Key frame="87" value="-1.31836" /><Key frame="110" value="-0.703127" /><Key frame="125" value="-0.527345" /><Key frame="140" value="-0.527345" /><Key frame="165" value="-1.75782" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="25" value="-0.9668" /><Key frame="50" value="-0.351564" /><Key frame="55" value="-0.351564" /><Key frame="75" value="-0.351564" /><Key frame="79" value="-0.351564" /><Key frame="83" value="-0.351564" /><Key frame="87" value="-0.351564" /><Key frame="110" value="-0.351564" /><Key frame="125" value="12.9199" /><Key frame="140" value="12.9199" /><Key frame="165" value="0.0878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="25" value="0.263673" /><Key frame="50" value="-0.351564" /><Key frame="55" value="-0.351564" /><Key frame="75" value="-0.351564" /><Key frame="79" value="-0.351564" /><Key frame="83" value="-0.351564" /><Key frame="87" value="-0.351564" /><Key frame="110" value="-0.351564" /><Key frame="125" value="-0.175782" /><Key frame="140" value="-0.175782" /><Key frame="165" value="0.439454" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="25" value="-84.4629" /><Key frame="50" value="-84.4629" /><Key frame="55" value="-84.4629" /><Key frame="75" value="-84.4629" /><Key frame="79" value="-84.4629" /><Key frame="83" value="-84.4629" /><Key frame="87" value="-84.4629" /><Key frame="110" value="-75.4102" /><Key frame="125" value="-75.5859" /><Key frame="140" value="-75.5859" /><Key frame="165" value="-84.2871" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="25" value="-5.97657" /><Key frame="50" value="-5.97657" /><Key frame="55" value="-5.97657" /><Key frame="75" value="-5.97657" /><Key frame="79" value="-5.97657" /><Key frame="83" value="-5.97657" /><Key frame="87" value="-5.97657" /><Key frame="110" value="-105.557" /><Key frame="125" value="-105.557" /><Key frame="140" value="-105.557" /><Key frame="165" value="-6.50391" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="25" value="0.0544815" /><Key frame="50" value="0.0544815" /><Key frame="55" value="0.0544815" /><Key frame="75" value="0.0544815" /><Key frame="79" value="0.0544815" /><Key frame="83" value="0.0544815" /><Key frame="87" value="0.0544815" /><Key frame="110" value="0.888401" /><Key frame="125" value="0.865554" /><Key frame="140" value="0.865554" /><Key frame="165" value="0.0544815" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="25" value="81.4746" /><Key frame="50" value="80.8594" /><Key frame="55" value="80.8594" /><Key frame="75" value="80.8594" /><Key frame="79" value="80.8594" /><Key frame="83" value="80.8594" /><Key frame="87" value="80.8594" /><Key frame="110" value="50.1855" /><Key frame="125" value="50.3613" /><Key frame="140" value="50.3613" /><Key frame="165" value="81.1231" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="25" value="51.8555" /><Key frame="50" value="51.8555" /><Key frame="55" value="51.8555" /><Key frame="75" value="51.8555" /><Key frame="79" value="51.8555" /><Key frame="83" value="51.8555" /><Key frame="87" value="51.8555" /><Key frame="110" value="15.293" /><Key frame="125" value="15.293" /><Key frame="140" value="15.293" /><Key frame="165" value="51.7676" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="25" value="-85.8726" /><Key frame="50" value="-85.8726" /><Key frame="55" value="-85.8726" /><Key frame="75" value="-85.8726" /><Key frame="79" value="-85.8726" /><Key frame="83" value="-85.8726" /><Key frame="87" value="-85.8726" /><Key frame="110" value="-96.5027" /><Key frame="125" value="-95.8923" /><Key frame="140" value="-95.8923" /><Key frame="165" value="-85.521" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="25" value="83.6719" /><Key frame="50" value="75.4102" /><Key frame="55" value="75.4102" /><Key frame="75" value="61.7871" /><Key frame="79" value="79.8047" /><Key frame="83" value="61.7871" /><Key frame="87" value="79.8047" /><Key frame="110" value="75.4102" /><Key frame="125" value="75.5859" /><Key frame="140" value="75.5859" /><Key frame="165" value="83.9356" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="25" value="6.76758" /><Key frame="50" value="105.557" /><Key frame="55" value="105.557" /><Key frame="75" value="57.832" /><Key frame="79" value="57.832" /><Key frame="83" value="57.832" /><Key frame="87" value="57.832" /><Key frame="110" value="105.557" /><Key frame="125" value="105.205" /><Key frame="140" value="105.205" /><Key frame="165" value="6.67969" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="25" value="0.0492091" /><Key frame="50" value="0.888401" /><Key frame="55" value="0.888401" /><Key frame="75" value="0.417399" /><Key frame="79" value="0.417399" /><Key frame="83" value="0.417399" /><Key frame="87" value="0.417399" /><Key frame="110" value="0.888401" /><Key frame="125" value="0.870826" /><Key frame="140" value="0.870826" /><Key frame="165" value="0.0483304" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="25" value="80.9473" /><Key frame="50" value="50.1855" /><Key frame="55" value="50.1855" /><Key frame="75" value="-16.1719" /><Key frame="79" value="-16.1719" /><Key frame="83" value="-16.1719" /><Key frame="87" value="-16.1719" /><Key frame="110" value="50.1855" /><Key frame="125" value="50.4492" /><Key frame="140" value="50.4492" /><Key frame="165" value="81.3867" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="25" value="-51.5918" /><Key frame="50" value="-15.293" /><Key frame="55" value="-15.293" /><Key frame="75" value="-20.127" /><Key frame="79" value="-17.9297" /><Key frame="83" value="-20.127" /><Key frame="87" value="-17.9297" /><Key frame="110" value="-15.293" /><Key frame="125" value="-15.3809" /><Key frame="140" value="-15.3809" /><Key frame="165" value="-51.416" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="25" value="86.2194" /><Key frame="50" value="96.5027" /><Key frame="55" value="96.5027" /><Key frame="75" value="62.8402" /><Key frame="79" value="62.8402" /><Key frame="83" value="62.8402" /><Key frame="87" value="62.8402" /><Key frame="110" value="96.5027" /><Key frame="125" value="95.7117" /><Key frame="140" value="95.7117" /><Key frame="165" value="86.6588" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Fight" id="4" localization="8" tooltip="期待してるから、がんばってくださいねぇ？" x="382" y="47"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="115" size="115"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe25" index="25"><Diagram><Box name="Fight" id="2" localization="8" tooltip="がんばってくださいねぇ？" x="102" y="28"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="135" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="期待してるから、がんばってくださいねぇ？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="25" value="-11.25" /><Key frame="115" value="-11.6895" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="25" value="0.175782" /><Key frame="115" value="0.175782" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="25" value="-1.31836" /><Key frame="53" value="-10" /><Key frame="60" value="-10" /><Key frame="64" value="-10" /><Key frame="68" value="-10" /><Key frame="72" value="-10" /><Key frame="76" value="-10" /><Key frame="90" value="-10" /><Key frame="115" value="-0.0878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="25" value="-0.527345" /><Key frame="115" value="-0.527345" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="25" value="0.439454" /><Key frame="115" value="0.9668" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="25" value="-84.1992" /><Key frame="35" value="-67.3242" /><Key frame="45" value="-78" /><Key frame="53" value="-50" /><Key frame="60" value="-50" /><Key frame="64" value="-50" /><Key frame="68" value="-50" /><Key frame="72" value="-50" /><Key frame="76" value="-50" /><Key frame="90" value="-50" /><Key frame="115" value="-84.0234" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="25" value="-6.5918" /><Key frame="35" value="-43.0664" /><Key frame="45" value="-77.4" /><Key frame="53" value="-85" /><Key frame="60" value="-85" /><Key frame="64" value="-85" /><Key frame="68" value="-85" /><Key frame="72" value="-85" /><Key frame="76" value="-85" /><Key frame="90" value="-85" /><Key frame="115" value="-6.5918" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="25" value="0.0571177" /><Key frame="35" value="0.0500879" /><Key frame="45" value="0.0976" /><Key frame="53" value="1" /><Key frame="60" value="1" /><Key frame="64" value="0" /><Key frame="68" value="0" /><Key frame="72" value="0" /><Key frame="76" value="0" /><Key frame="90" value="0" /><Key frame="115" value="0.0659051" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="25" value="81.3867" /><Key frame="35" value="56.1621" /><Key frame="45" value="27.1925" /><Key frame="53" value="0.204119" /><Key frame="60" value="0.204119" /><Key frame="64" value="10.7" /><Key frame="68" value="0.204119" /><Key frame="72" value="10.7" /><Key frame="76" value="0.204119" /><Key frame="90" value="0.204119" /><Key frame="115" value="80.7715" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="25" value="51.6797" /><Key frame="35" value="27.2461" /><Key frame="45" value="10" /><Key frame="53" value="10" /><Key frame="60" value="10" /><Key frame="64" value="10" /><Key frame="68" value="10" /><Key frame="72" value="10" /><Key frame="76" value="10" /><Key frame="90" value="10" /><Key frame="115" value="51.1523" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="25" value="-85.3453" /><Key frame="35" value="-40.9599" /><Key frame="45" value="-9.31412" /><Key frame="53" value="-12.5" /><Key frame="60" value="-12.5" /><Key frame="64" value="-12.5" /><Key frame="68" value="-12.5" /><Key frame="72" value="-12.5" /><Key frame="76" value="-12.5" /><Key frame="90" value="-12.5" /><Key frame="115" value="-84.3785" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="25" value="83.9356" /><Key frame="35" value="67.2363" /><Key frame="45" value="83.939" /><Key frame="53" value="50" /><Key frame="60" value="50" /><Key frame="64" value="50" /><Key frame="68" value="50" /><Key frame="72" value="50" /><Key frame="76" value="50" /><Key frame="90" value="50" /><Key frame="115" value="83.584" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="25" value="6.67969" /><Key frame="35" value="43.1543" /><Key frame="45" value="77.4" /><Key frame="53" value="85" /><Key frame="60" value="85" /><Key frame="64" value="85" /><Key frame="68" value="85" /><Key frame="72" value="85" /><Key frame="76" value="85" /><Key frame="90" value="85" /><Key frame="115" value="6.67969" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="25" value="0.0509666" /><Key frame="35" value="0.0492091" /><Key frame="45" value="0.0976" /><Key frame="53" value="1" /><Key frame="60" value="1" /><Key frame="64" value="0" /><Key frame="68" value="0" /><Key frame="72" value="0" /><Key frame="76" value="0" /><Key frame="90" value="0" /><Key frame="115" value="0.0606327" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="25" value="81.2988" /><Key frame="35" value="55.8106" /><Key frame="45" value="27.1925" /><Key frame="53" value="0.204119" /><Key frame="60" value="0.204119" /><Key frame="64" value="10.7" /><Key frame="68" value="0.204119" /><Key frame="72" value="10.7" /><Key frame="76" value="0.204119" /><Key frame="90" value="0.204119" /><Key frame="115" value="80.9473" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="25" value="-51.3281" /><Key frame="35" value="-26.7188" /><Key frame="45" value="-10" /><Key frame="53" value="-10" /><Key frame="60" value="-10" /><Key frame="64" value="-10" /><Key frame="68" value="-10" /><Key frame="72" value="-10" /><Key frame="76" value="-10" /><Key frame="90" value="-10" /><Key frame="115" value="-50.9766" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="25" value="86.2194" /><Key frame="35" value="40.6915" /><Key frame="45" value="9.31412" /><Key frame="53" value="12.5" /><Key frame="60" value="12.5" /><Key frame="64" value="12.5" /><Key frame="68" value="12.5" /><Key frame="72" value="12.5" /><Key frame="76" value="12.5" /><Key frame="90" value="12.5" /><Key frame="115" value="84.9889" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Show Image" id="13" localization="8" tooltip="display an image on the screen&#x0A;&#x0A;V1.0.0&#x0A;" x="98" y="163"><bitmap>media/images/box/interaction/rec_movie.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def onLoad(self):
        self.frameManager = None
        try:
            self.frameManager = ALProxy("ALFrameManager")
        except Exception as e:
            self.logger.error(e)

    def onUnload(self):
        pass

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def _getAbsoluteUrl(self, partial_url):
        import os
        subPath = os.path.join(self.packageUid(), os.path.normpath(partial_url).lstrip("\\/"))
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        return "http://%s/apps/%s" %(self._getTabletService().robotIp(), subPath.replace(os.path.sep, "/"))

    def onInput_onStart(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                url = self.getParameter("ImageUrl")
                if url == '':
                    self.logger.error("URL of the image is empty")
                if not url.startswith('http'):
                    url = self._getAbsoluteUrl(url)
                tabletService.showImage(url)
            except Exception as err:
                self.logger.error("Error during ShowImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't display the image.")
            self.onStopped()

    def onInput_onHideImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                tabletService.hideImage()
            except Exception as err:
                self.logger.error("Error during HideImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't hide the image.")
            self.onStopped()

    def onInput_onPreLoadImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                partialUrl = self.getParameter("ImageUrl")
                fullUrl = self._getAbsoluteUrl(partialUrl)
                tabletService.preLoadImage(fullUrl)
            except Exception as err:
                self.logger.warning("Error during preLoadImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't preload the image.")
            self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="onHideImage" type="1" type_size="1" nature="1" inner="0" tooltip="Hide the image when a signal is received on this input." id="4" /><Input name="onPreLoadImage" type="1" type_size="1" nature="1" inner="0" tooltip="Preload the image when a signal is received on this input." id="5" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" /><Parameter name="ImageUrl" inherits_from_parent="0" content_type="3" value="sample2-1.jpg" default_value="" custom_choice="0" tooltip='path of the image inside the &quot;html&quot; folder (e.g. &quot;/images/myimage.png&quot;' id="7" /></Box><Link inputowner="3" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Finish" id="6" localization="8" tooltip="以下の終了作業を行う。&#x0A;&#x0A;・目のLEDを白にする&#x0A;・タブレットの表示を消す&#x0A;・基本姿勢（直立）の戻す" x="418" y="39"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Hide Web View" id="4" localization="8" tooltip="Hides the webview (html content) on the tablet, behind a generic cover&#x0A;&#x0A;V1.0.0&#x0A;" x="137" y="176"><bitmap>media/images/box/internet/internet.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def onInput_onStart(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            tabletService.hideWebview()
        else:
            self.logger.warning("ALTabletService not found.")
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /></Box><Box name="Stand Init" id="1" localization="8" tooltip="基本姿勢（直立）に戻る。" x="155" y="295"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="40" value="-11.4258" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="40" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="40" value="-1.75782" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="40" value="-0.878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="40" value="0.527345" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="40" value="-29.4434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="40" value="-70.4883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="40" value="0.579965" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="40" value="88.8574" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="40" value="7.99804" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="40" value="-0.178186" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="40" value="29.707" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="40" value="70.6641" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="40" value="0.57645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="40" value="88.9453" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="40" value="-7.99804" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="40" value="0.0854867" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Eye LEDs" id="10" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="135" y="15"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4"><Choice value="Both" /><Choice value="Left" /><Choice value="Right" /></Parameter><Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ids = []
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        id = self.leds.post.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"))
        self.ids.append(id)
        self.leds.wait(id, 0)
        self.ids.remove(id)
        if( self.ids == [] ):
            self.onDone() # activate output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" /><Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4"><Choice value="Both" /><Choice value="Left" /><Choice value="Right" /></Parameter><Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" /></Box><Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 255, 255])]]></content></script><pluginContent><color>#ffffff</color></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" /><Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" /></Box><Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Show Image" id="13" localization="8" tooltip="display an image on the screen&#x0A;&#x0A;V1.0.0&#x0A;" x="238" y="87"><bitmap>media/images/box/interaction/rec_movie.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def _getAbsoluteUrl(self, partial_url):
        import os
        subPath = os.path.join(self.packageUid(), os.path.normpath(partial_url).lstrip("\\/"))
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        return "http://%s/apps/%s" %(self._getTabletService().robotIp(), subPath.replace(os.path.sep, "/"))

    def onInput_onStart(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                url = self.getParameter("ImageUrl")
                if url == '':
                    self.logger.error("URL of the image is empty")
                if not url.startswith('http'):
                    url = self._getAbsoluteUrl(url)
                tabletService.showImage(url)
            except Exception as err:
                self.logger.error("Error during ShowImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't display the image.")
            self.onStopped()

    def onInput_onHideImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                tabletService.hideImage()
            except Exception as err:
                self.logger.error("Error during HideImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't hide the image.")
            self.onStopped()

    def onInput_onPreLoadImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                partialUrl = self.getParameter("ImageUrl")
                fullUrl = self._getAbsoluteUrl(partialUrl)
                tabletService.preLoadImage(fullUrl)
            except Exception as err:
                self.logger.warning("Error during preLoadImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't preload the image.")
            self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="onHideImage" type="1" type_size="1" nature="1" inner="0" tooltip="Hide the image when a signal is received on this input." id="4" /><Input name="onPreLoadImage" type="1" type_size="1" nature="1" inner="0" tooltip="Preload the image when a signal is received on this input." id="5" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" /><Parameter name="ImageUrl" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip='path of the image inside the &quot;html&quot; folder (e.g. &quot;/images/myimage.png&quot;' id="7" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="13" indexofinput="4" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="6" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>